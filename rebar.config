%% % @format
{project_app_dirs, ["edb_core", "edb"]}.

{erl_opts, [
    debug_info,
    warnings_as_errors,
    warn_unused_import,
    warn_missing_spec_all
]}.

{minimum_otp_vsn, "27"}.

{erlfmt, [
    write,
    {files, [
        "edb/{src,include,test}/*.{hrl,erl,app.src}",
        "edb_core/{src,include,test}/*.{hrl,erl,app.src}",
        "rebar.config"
    ]},
    {exclude_files, []},
    {print_width, 120}
]}.

{project_plugins, [
    erlfmt
]}.

{profiles, [
    {test, [
        {erl_opts, [
            nowarn_export_all,
            nowarn_missing_spec_all
        ]}
    ]}
]}.

{dialyzer, [
    {warnings, [unknown]},
    {plt_apps, all_deps},
    {plt_extra_apps, []}
]}.

{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    locals_not_used,
    deprecated_function_calls,
    deprecated_functions
]}.

{escript_name, edb}.
{escript_main_app, edb}.
% +sbwt* none               - By default the Erlang VM is optimised for latency, with schedulers spinning in busy loops fairly frequently
%                             to avoid cost of OS sleep + wake cycle.
%                             This is not necessary for us. The escript exists alongside other programs on the machine, so
%                             we should give all the flexibility to the OS to schedule resources as necessary.
% +A0                       - Async threads are used only for old-style async port drivers. We don't use them, so save a thread
% -noinput                  - Do not try to read any input. Required to be able to access stdin/out via a port
% -kernel connect_all false - Do not actively connect to all nodes that you become aware of
% -escript main edb_main    - Specify the entry point for the Escript
{escript_emu_args,
    "%%! +sbwt none +sbwtdcpu none +sbwtdio none +A0 -noinput -kernel connect_all false -escript main edb_main\n"}.

% We select `ex_doc` as the documentation provider. This renders documentation in Elixir style, as opposed to the old Erlang EDoc style.
{hex, [{doc, ex_doc}]}.

% Customize how pages are rendered, adding the main entry point and eventual extra pages
{ex_doc, [
    {source_url, ~"https://github.com/WhatsApp/edb"},
    {extras, [~"README.md", ~"LICENSE.md", ~"docs/DAP.md"]},
    {main, ~"README.md"}
]}.

% Some of the test suites perform E2E tests on the edb Escript, so
% ensure the Escript is produced and copied to the appropriate data directories.
% Ideally we'd only execute this for the relevant test suites, but this is a simple enough approximation
% SUITES THAT NEED ESCRIPT
{pre_hooks, [
    {ct, "rebar3 escriptize"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_attach_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_attach_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_configuration_phase_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_configuration_phase_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_evaluate_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_evaluate_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_id_mappings_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_id_mappings_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_launch_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_launch_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_parse_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_parse_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_pause_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_pause_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_request_launch_arguments_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_request_launch_arguments_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_scopes_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_scopes_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_session_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_session_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_set_breakpoints_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_set_breakpoints_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_steps_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_steps_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_dap_utils_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_dap_utils_SUITE_data"},
    {ct, "mkdir -p _build/test/lib/edb/test/edb_main_SUITE_data"},
    {ct, "cp _build/default/bin/edb _build/test/lib/edb/test/edb_main_SUITE_data"}
]}.
